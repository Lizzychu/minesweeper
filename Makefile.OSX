# target
MINE = mine
MINE_SOURCES = main.cpp game.cpp ui.cpp menu.cpp
MINE_CMD = mine-cmd
MINE_CMD_SOURCES = cmd.cpp game.cpp
BIN = $(MINE) $(MINE_CMD)
APP = Mine.app

# commandline tools
COMPILER = clang++
LINKER = clang++

# additional path we need
FRAMEWORK_PATH = /Library/Frameworks
SDL_IMAGE_FRAMEWORK = $(FRAMEWORK_PATH)/SDL2_image.framework
SDL_FRAMEWORK = $(FRAMEWORK_PATH)/SDL2.framework

# compiler flags
CPP_SPEC = -std=c++11 -stdlib=libc++
OBJC_SPEC = -ObjC
CFLAGS = -Wextra -g -O2 -iframework $(FRAMEWORK_PATH) -c

# link flags
# - statically link standard libraries
LDFLAGS = -F $(FRAMEWORK_PATH) -framework SDL2 -framework SDL2_image -framework Cocoa

#This is the target that compiles our executable
.PHONY: all
all: dist

%.o: %.cpp
	$(COMPILER) $(CPP_SPEC) $(CFLAGS) -o $@ $<

menu-mac.o: menu-mac.mm
	$(COMPILER) $(OBJC_SPEC) $(CFLAGS) -o $@ $<

$(MINE): $(MINE_SOURCES:.cpp=.o) menu-mac.o
	$(LINKER) -o $@ $^ $(LDFLAGS)

$(MINE_CMD): $(MINE_CMD_SOURCES:.cpp=.o)
	$(LINKER) -o $@ $^ $(LDFLAGS)

.PHONY: dist
dist: $(BIN)
	rm -rf $(APP)
	mkdir $(APP)
	mkdir $(APP)/Contents
	mkdir $(APP)/Contents/MacOS
	mkdir $(APP)/Contents/Resources
	mkdir $(APP)/Contents/Frameworks

	cp $(MINE) $(APP)/Contents/MacOS/$(MINE)
	cp $(MINE_CMD) $(APP)/Contents/MacOS/$(MINE_CMD)
	cp osx-support/Info.plist $(APP)/Contents
	cp -rf images $(APP)/Contents/Resources/images
	cp -rf $(SDL_IMAGE_FRAMEWORK) $(APP)/Contents/Frameworks
	cp -rf $(SDL_FRAMEWORK) $(APP)/Contents/Frameworks

.PHONY: clean
clean:
	rm -rf $(BIN) *.o $(APP)

